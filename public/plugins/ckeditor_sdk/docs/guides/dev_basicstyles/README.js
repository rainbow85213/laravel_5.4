Ext.data.JsonP.dev_basicstyles({"guide":"<!--\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nFor licensing, see LICENSE.md.\n-->\n\n\n<h1 id='dev_basicstyles-section-basic-text-styles%3A-bold%2C-italic-and-more'>Basic Text Styles: Bold, Italic and More</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/dev_basicstyles-section-enabling-all-basic-styles'>Enabling All Basic Styles</a><ol>\n<li>\n<a href='#!/guide/dev_basicstyles-section-enable-all-basic-styles-globally'>Enable All Basic Styles Globally</a></li>\n<li>\n<a href='#!/guide/dev_basicstyles-section-enable-all-basic-styles-for-a-single-editor-instance'>Enable All Basic Styles for a Single Editor Instance</a></li>\n</ol>\n<li>\n<a href='#!/guide/dev_basicstyles-section-custom-basic-text-style-definition'>Custom Basic Text Style Definition</a></li>\n<li>\n<a href='#!/guide/dev_basicstyles-section-basic-text-styles-demo'>Basic Text Styles Demo</a></li>\n<li>\n<a href='#!/guide/dev_basicstyles-section-related-features'>Related Features</a></li></ol>\n</div>\n\n<p class=\"requirements\">\n    This feature is provided through a plugin that is included in all official CKEditor distributions (Basic, Standard, Full) available from the official CKEditor <a href=\"http://ckeditor.com/download\">Download</a> site, although some text style buttons are disabled in the Basic and Standard preset.\n</p>\n\n\n<p>The <a href=\"http://ckeditor.com/addon/basicstyles\">Basic Styles</a> plugin provides the ability to add some basic text formatting to your document. When enabled, it adds the <strong>Bold</strong>, <strong>Italic</strong>, <strong>Underline</strong>, <strong>Strikethrough</strong>, <strong>Subscript</strong> and <strong>Superscript</strong> toolbar buttons that apply these styles. If you want to quickly <a href=\"#!/guide/dev_removeformat\">remove basic styles</a> from your document, use the <strong>Remove Format</strong> button provided by the <a href=\"http://ckeditor.com/addon/removeformat\">Remove Format</a> plugin.</p>\n\n<p>Basic text styles work on text selections; check the <a href=\"#!/guide/dev_format\">Text Formats</a> feature for block-level text formatting.</p>\n\n<p><p><img src=\"guides/dev_basicstyles/basicstyles_01.png\" alt=\"Basic styles enabled in CKEditor\" width=\"938\" height=\"298\"></p></p>\n\n<h2 id='dev_basicstyles-section-enabling-all-basic-styles'>Enabling All Basic Styles</h2>\n\n<p>By default, some of these styles are disabled in the Basic and Standard presets through the <a href=\"#!/api/CKEDITOR.config-cfg-removeButtons\" rel=\"CKEDITOR.config-cfg-removeButtons\" class=\"docClass\">CKEDITOR.config.removeButtons</a> setting in the <code>config.js</code> file, but you can easily enable them by using one of the following solutions.</p>\n\n<h3 id='dev_basicstyles-section-enable-all-basic-styles-globally'>Enable All Basic Styles Globally</h3>\n\n<p>Open the <code>config.js</code> file available in your <code>ckeditor</code> directory, and edit the <code>config.removeButtons</code> entry in the following way:</p>\n\n<pre><code>// For the Basic preset:\nconfig.removeButtons = 'Cut,Copy,Paste,Undo,Redo,Anchor';\n\n// For the Standard preset:\nconfig.removeButtons = '';\n</code></pre>\n\n<p><strong>Advantages</strong></p>\n\n<p>This will apply to all CKEditor instances that you create, so you will not need to remember to change it for each one separately.</p>\n\n<p><strong>Disadvantages</strong></p>\n\n<p>You will need to remember not to overwrite this file when <a href=\"#!/guide/dev_upgrade\">upgrading</a> to a newer CKEditor version. <strong>Solution</strong>: Provide a <a href=\"#!/guide/dev_configuration-section-using-a-custom-configuration-file\">custom configuration file</a> overriding the default configuration.</p>\n\n<h3 id='dev_basicstyles-section-enable-all-basic-styles-for-a-single-editor-instance'>Enable All Basic Styles for a Single Editor Instance</h3>\n\n<p>If you want to change the default settings for a particular editor instance, provide the modified <code>config.removeButtons</code> value in the <a href=\"#!/guide/dev_configuration-section-defining-configuration-in-page\">in-page configuration</a> when creating a CKEditor instance, for example:</p>\n\n<pre><code>// For the Basic preset:\n<a href=\"#!/api/CKEDITOR-method-replace\" rel=\"CKEDITOR-method-replace\" class=\"docClass\">CKEDITOR.replace</a>( 'editor1', {\n    removeButtons: 'Cut,Copy,Paste,Undo,Redo,Anchor'\n});\n\n// For the Standard preset:\n<a href=\"#!/api/CKEDITOR-method-replace\" rel=\"CKEDITOR-method-replace\" class=\"docClass\">CKEDITOR.replace</a>( 'editor1', {\n    removeButtons: ''\n});\n</code></pre>\n\n<p><strong>Advantages</strong></p>\n\n<p>This will only apply to a selected CKEditor instance that you create, without affecting your global configuration.</p>\n\n<p><strong>Disadvantages</strong></p>\n\n<p>You will need to provide the in-page configuration for all other CKEditor instances that you want to use it with.</p>\n\n<h2 id='dev_basicstyles-section-custom-basic-text-style-definition'>Custom Basic Text Style Definition</h2>\n\n<p>Basic text styles can be output in HTML in different ways. For example, the <strong>Bold</strong> feature can be implemented as <code>&lt;strong&gt;</code>, <code>&lt;b&gt;</code>, <code>&lt;span style=\"font-weight: bold;\"&gt;</code> or <code>&lt;span class=\"Bold\"&gt;</code>. These configuration options let you set custom definitons for basic text style output:</p>\n\n<ul>\n<li><a href=\"#!/api/CKEDITOR.config-cfg-coreStyles_bold\" rel=\"CKEDITOR.config-cfg-coreStyles_bold\" class=\"docClass\">CKEDITOR.config.coreStyles_bold</a></li>\n<li><a href=\"#!/api/CKEDITOR.config-cfg-coreStyles_italic\" rel=\"CKEDITOR.config-cfg-coreStyles_italic\" class=\"docClass\">CKEDITOR.config.coreStyles_italic</a></li>\n<li><a href=\"#!/api/CKEDITOR.config-cfg-coreStyles_underline\" rel=\"CKEDITOR.config-cfg-coreStyles_underline\" class=\"docClass\">CKEDITOR.config.coreStyles_underline</a></li>\n<li><a href=\"#!/api/CKEDITOR.config-cfg-coreStyles_strike\" rel=\"CKEDITOR.config-cfg-coreStyles_strike\" class=\"docClass\">CKEDITOR.config.coreStyles_strike</a></li>\n<li><a href=\"#!/api/CKEDITOR.config-cfg-coreStyles_subscript\" rel=\"CKEDITOR.config-cfg-coreStyles_subscript\" class=\"docClass\">CKEDITOR.config.coreStyles_subscript</a></li>\n<li><a href=\"#!/api/CKEDITOR.config-cfg-coreStyles_superscript\" rel=\"CKEDITOR.config-cfg-coreStyles_superscript\" class=\"docClass\">CKEDITOR.config.coreStyles_superscript</a></li>\n</ul>\n\n\n<p>The following example configures CKEditor to output bold with an inline CSS style, italic with the <code>&lt;i&gt;</code> element, and subscript and superscript with CSS classes.</p>\n\n<pre><code>config.coreStyles_bold = {\n    element: 'span',\n    styles: { 'font-weight': 'bold' }\n};\n\nconfig.coreStyles_italic = { element: 'i', overrides: 'em' };\n\nconfig.coreStyles_subscript = {\n    element: 'span',\n    attributes: { 'class': 'Subscript' },\n    overrides: 'sub'\n};\n\nconfig.coreStyles_superscript = {\n    element: 'span',\n    attributes: { 'class': 'Superscript' },\n    overrides: 'sup'\n};\n</code></pre>\n\n<p>You can use the <code>overrides</code> parameter to define an alternative that CKEditor will convert into your desired form.</p>\n\n<p>Remember that depending on your use case, the CSS classes for basic text styles need to be defined accordingly. For <a href=\"#!/guide/dev_framed\">classic editor</a> they should be defined in an external CSS file added to the editor configuration with the <a href=\"#!/api/CKEDITOR.config-cfg-contentsCss\" rel=\"CKEDITOR.config-cfg-contentsCss\" class=\"docClass\">CKEDITOR.config.contentsCss</a> option. For <a href=\"#!/guide/dev_inline\">inline editor</a> they need to be added directly to the page stylesheet.</p>\n\n<div class=\"tip\">\n    <p>\n        Some conversions are applied automatically thanks to a feature called <a href=\"#!/guide/dev_advanced_content_filter-section-content-transformations\">content transformations</a> which is a part of Advanced Content Filter. This, however, will only work when ACF\n    is enabled (the deafult option), and applies to a handful of pre-defined transformations.\n    </p>\n    <p>\n        Custom basic style definitions are automatically integrated with <a href=\"#!/guide/dev_acf\">Advanced Content Filter</a> and are treated as allowed by the editor content filtering mechanism.\n    </p>\n</div>\n\n\n<h2 id='dev_basicstyles-section-basic-text-styles-demo'>Basic Text Styles Demo</h2>\n\n<p>See the <a href=\"../samples/basicstyles.html\">working \"Basic Text Styles: Bold, Italic and More\" sample</a> that showcases the usage and customization of basic text formatting.</p>\n\n<h2 id='dev_basicstyles-section-related-features'>Related Features</h2>\n\n<p>Refer to the following resources for more information about text styling and formatting:</p>\n\n<ul>\n<li>The <a href=\"#!/guide/dev_fcopyformatting\">Using the Copy Formatting Feature</a> article explains how to copy text formatting between document fragments.</li>\n<li>The <a href=\"#!/guide/dev_removeformat\">Removing Text Formatting</a> article explains how to quickly remove any text formatting that is applied through inline HTML elements and CSS styles.</li>\n<li>The <a href=\"#!/guide/dev_styles\">Applying Styles to Editor Content</a> article discusses creating more semantically correct text styles.</li>\n<li>The <a href=\"#!/guide/dev_format\">Applying Block-Level Text Formats</a> article presents how to apply formatting to entire text blocks and not just text selections.</li>\n<li>The <a href=\"#!/guide/dev_colorbutton\">Setting Text and Background Color</a> article explains how to use and customize the <strong>Text Color</strong> and <strong>Background Color</strong> features.</li>\n</ul>\n\n","title":"Basic Text Styles","meta_description":"Applying basic text styles: bold, italic, underline, strikethrough, subscript, superscript.","meta_keywords":"ckeditor, editor, wysiwyg, style, styles, bold, italic, underline, strike, strikethrough, subscript, superscript, formatting, format, text, configuration, configure, modify, modification, change, customize, customization, customise, customisation"});