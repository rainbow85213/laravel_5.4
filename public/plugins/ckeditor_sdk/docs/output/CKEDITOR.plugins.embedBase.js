Ext.data.JsonP.CKEDITOR_plugins_embedBase({"tagname":"class","name":"CKEDITOR.plugins.embedBase","alternateClassNames":[],"members":[{"name":"createWidgetBaseDefinition","tagname":"method","owner":"CKEDITOR.plugins.embedBase","id":"static-method-createWidgetBaseDefinition","meta":{"static":true}}],"aliases":{},"files":[{"filename":"","href":""}],"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-createWidgetBaseDefinition' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CKEDITOR.plugins.embedBase'>CKEDITOR.plugins.embedBase</span><br/><a href='source/plugin30.html#CKEDITOR-plugins-embedBase-static-method-createWidgetBaseDefinition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CKEDITOR.plugins.embedBase-static-method-createWidgetBaseDefinition' class='name expandable'>createWidgetBaseDefinition</a>( <span class='pre'>editor</span> ) : <a href=\"#!/api/CKEDITOR.plugins.embedBase.baseDefinition\" rel=\"CKEDITOR.plugins.embedBase.baseDefinition\" class=\"docClass\">CKEDITOR.plugins.embedBase.baseDefinition</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Creates a new embed widget base definition. ...</div><div class='long'><p>Creates a new embed widget base definition. After other necessary properties are filled this definition\nmay be <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-add\" rel=\"CKEDITOR.plugins.widget.repository-method-add\" class=\"docClass\">registered</a> as a new, independent widget for\nembedding content.</p>\n\n<p>By default an embed widget is set up to work with <a href=\"http://www.oembed.com/\">oEmbed providers</a> using JSONP\nrequests, such as <a href=\"https://iframely.com/\">Iframely</a> or <a href=\"https://noembed.com/\">Noembed</a>. It can be,\nhowever, easily configured to use other providers and communication methods, including custom systems\nor local embed databases.</p>\n\n<p>See example usage of this method in:</p>\n\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/embed/plugin.js\">/plugins/embed/plugin.js</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/embedsemantic/plugin.js\">/plugins/embedsemantic/plugin.js</a></li>\n</ul>\n\n\n<p>Note that both these plugins reuse the <a href=\"https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/embedbase/dialogs/embedbase.js\">dialog</a>\ndefined by the <code>embedbase</code> plugin. Integration of the asynchronous way of loading content with a dialog requires additional\neffort. Check the dialog's code for more details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editor</span> : <a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CKEDITOR.plugins.embedBase.baseDefinition\" rel=\"CKEDITOR.plugins.embedBase.baseDefinition\" class=\"docClass\">CKEDITOR.plugins.embedBase.baseDefinition</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});